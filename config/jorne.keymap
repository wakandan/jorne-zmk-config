/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define SPLIT_USB_DETECT
#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
    chain-length = <28>; // 21 backlight + 6 underglow
};

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <LWR RSE>;
            then-layer = <ADJ>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "MAIN";

            // -----------------------------------------------------------------------------------------
            // |  GUI |   ~  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   | GUI/] |
            //        | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
            //        | LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |RALT/\|
            //                           | RSE | SPC | LWR |   | LWR | BSPC | RSE |

            bindings = <
&kp ESCAPE  &kp TAB         &kp Q  &kp W  &kp E  &kp R         &kp T           &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BACKSPACE    &kp ENTER
            &kp LCTRL       &kp A  &kp S  &kp D  &kp F         &kp G           &kp H      &kp J  &kp K      &kp L    &kp SEMI  &mt RCTRL SQT
            &kp LEFT_SHIFT  &kp Z  &kp X  &kp C  &kp V         &kp B           &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                                          &mo 1  &kp LEFT_ALT  &kp LEFT_WIN    &kp SPACE  &mo 1  &mo 2
            >;
        };

        lower_layer {
            display-name = "SYM";

            // -----------------------------------------------------------------------------------------
            // |     |  _  |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |
            //       |  +  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  -  |
            //       |  =  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
            //                         | ADJ |     |     |   |     |     | ADJ |

            bindings = <
&kp GRAVE  &kp TILDE  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH       &kp DOLLAR     &kp PERCENT         &kp CARET     &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE     &kp RIGHT_BRACE
           &kp EQUAL  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3   &kp NUMBER_4   &kp NUMBER_5        &kp NUMBER_6  &kp NUMBER_7   &kp NUMBER_8  &kp N9                &kp N0                 &kp COLON
           &kp PLUS   &kp MINUS        &kp PIPE      &kp BACKSLASH  &kp LESS_THAN  &kp GREATER_THAN    &kp EQUAL     &kp PLUS       &kp MINUS     &kp UNDERSCORE        &kp LEFT_BRACKET       &kp RIGHT_BRACKET
                                                     &trans         &trans         &trans              &trans        &trans         &trans
            >;
        };

        raise_layer {
            display-name = "NUM";

            // -----------------------------------------------------------------------------------------
            // |     | NMLK |  /  |  7  |  8  |  9  |  -  |   | VOLU| HOME| PRSC| PGUP| SCLK| CLCK|     |
            //       |CTRL/=|  *  |  4  |  5  |  6  |  +  |   | MUT | LEFT|  UP | RGHT| INS | APP |
            //       |      |  0  |  1  |  2  |  3  |  .  |   | VOLD| END | DOWN| PGDN| PAUS|     |
            //                          |     |     | ADJ |   | ADJ |     |     |

            bindings = <
&trans  &kp KP_NUM       &kp KP_SLASH     &kp KP_N7        &kp KP_N8        &kp KP_N9  &kp KP_MINUS    &kp C_VOL_UP  &kp HOME  &kp UP_ARROW    &kp END    &kp SLCK  &kp CAPS         &trans
        &mt LCTRL EQUAL  &kp KP_MULTIPLY  &kp KP_N4        &kp KP_N5        &kp KP_N6  &kp KP_PLUS     &kp C_MUTE    &kp LEFT  &kp DOWN_ARROW  &kp RIGHT  &kp INS   &mt RCTRL K_APP
        &rgb_ug RGB_TOG  &rgb_ug RGB_ON   &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &kp KP_N3  &kp KP_DOT      &kp C_VOL_DN  &kp END   &kp DOWN        &kp PG_DN  &trans    &trans
                                                           &trans           &trans     &trans          &trans        &trans    &trans
            >;
        };

        adjust_layer {
            display-name = "ADJ";

            // -----------------------------------------------------------------------------------------
            // | RST | BLDR | STU |     |     |     |     |   |     |     |     |     | STU | BLDR | RST |
            //       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
            //       | OUT  |     |     |     |     |     |   |     |     |     |     |     | OUT  |
            //                          |     |     |     |   |     |     |     |

            bindings = <
&sys_reset  &bootloader   &studio_unlock  &none         &none         &none         &none           &none         &none         &none         &none         &studio_unlock  &bootloader   &sys_reset
            &bt BT_CLR    &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0    &bt BT_CLR
            &out OUT_TOG  &none           &none         &none         &none         &none           &none         &none         &none         &none         &none           &out OUT_TOG
                                                        &trans        &none         &trans          &trans        &none         &trans
            >;
        };
    };
};
